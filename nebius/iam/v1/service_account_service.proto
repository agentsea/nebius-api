syntax = "proto3";

package nebius.iam.v1;

import "buf/validate/validate.proto";
import "nebius/annotations.proto";
import "nebius/common/v1/metadata.proto";
import "nebius/common/v1/operation.proto";
import "nebius/iam/v1/service_account.proto";

option go_package = "github.com/nebius/gosdk/proto/nebius/iam/v1";
option java_multiple_files = true;
option java_outer_classname = "ServiceAccountServiceProto";
option java_package = "ai.nebius.pub.iam.v1";

service ServiceAccountService {
  option (api_service_name) = "cpl.iam";

  rpc Create(CreateServiceAccountRequest) returns (common.v1.Operation);

  rpc Get(GetServiceAccountRequest) returns (ServiceAccount);

  rpc GetByName(GetServiceAccountByNameRequest) returns (ServiceAccount);

  rpc List(ListServiceAccountRequest) returns (ListServiceAccountResponse);

  rpc Update(UpdateServiceAccountRequest) returns (common.v1.Operation);

  rpc Delete(DeleteServiceAccountRequest) returns (common.v1.Operation);
}

message CreateServiceAccountRequest {
  common.v1.ResourceMetadata metadata = 1;

  ServiceAccountSpec spec = 2;
}

message GetServiceAccountRequest {
  string id = 1;
}

message GetServiceAccountByNameRequest {
  string parent_id = 1 [(buf.validate.field).required = true];

  string name = 2 [(buf.validate.field).required = true];
}

message ListServiceAccountRequest {
  // Represents the container ID.
  string parent_id = 1;

  // Specifies the maximum number of items to return in the response.
  // Default value: 10
  optional int64 page_size = 2;

  // Token for pagination, allowing the retrieval of the next set of results.
  string page_token = 3;

  // A filter to narrow down the results based on specific criteria.
  string filter = 4;
}

message UpdateServiceAccountRequest {
  common.v1.ResourceMetadata metadata = 1;

  ServiceAccountSpec spec = 2;
}

message DeleteServiceAccountRequest {
  string id = 1;
}

message ListServiceAccountResponse {
  // List of service accounts returned in the response. The field should be named as `items` for consistency.
  repeated ServiceAccount items = 1;

  // Token for pagination, indicating the next set of results can be retrieved using this token.
  string next_page_token = 2;
}
