// @generated
// This file is @generated by prost-build.
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Operation {
    /// ID of the operation.
    #[prost(string, tag="1")]
    pub id: ::prost::alloc::string::String,
    /// Human readable description of the operation. 0-256 characters long.
    #[prost(string, tag="2")]
    pub description: ::prost::alloc::string::String,
    /// Creation timestamp.
    #[prost(message, optional, tag="3")]
    pub created_at: ::core::option::Option<::pbjson_types::Timestamp>,
    /// ID of the user or service account who initiated the operation.
    #[prost(string, tag="4")]
    pub created_by: ::prost::alloc::string::String,
    /// The time when the operation finished.
    #[prost(message, optional, tag="5")]
    pub finished_at: ::core::option::Option<::pbjson_types::Timestamp>,
    /// The request that generated this operation.
    #[prost(message, optional, tag="6")]
    pub request: ::core::option::Option<::pbjson_types::Any>,
    /// The request headers that are essential for the request that generated the operation.
    /// For instance, `x-resetmask`. Without these headers the request might have been processed
    /// differently if repeated.
    /// All the header names *must* be converted to lower case.
    /// Validator is based on:
    /// <https://httpwg.org/specs/rfc9110.html#considerations.for.new.field.names>
    #[prost(map="string, message", tag="11")]
    pub request_headers: ::std::collections::HashMap<::prost::alloc::string::String, operation::RequestHeader>,
    /// ID of the resource that this operation creates, updates, deletes or otherwise changes.
    ///
    /// If the operation affects multiple resources or does not affect any API resources at all
    /// (e.g. a routine maintenance operation visible to the user), the \[resource_id\] must be empty.
    #[prost(string, tag="7")]
    pub resource_id: ::prost::alloc::string::String,
    /// Snapshot of the resource at the moment this operation started.
    /// - \[resource.spec\] and \[resource.metadata\] reflect the desired resource state at the moment
    ///    this operation started.
    ///    E.g., in an Update operation it will be the *updated* resource spec and metadata,
    ///    in a Create operation it will be the spec and metadata *of the resource being created*,
    ///    and so on.
    /// - \[resource.status\] reflects the status of the resource at the moment this operation started.
    ///    This is a snapshot, call the <Resource>Service/Get to get current status of the resource.
    ///
    /// The \[resource\] field MUST never be updated *after* this operation has started.
    ///
    /// In a Delete operation, an operation affecting multiple resources or an operation that doesn't
    /// affect any API resources at all (e.g. a routine maintenance operation visible to the user),
    /// the \[resource\] inside MUST be a \[google.protobuf.Empty\].
    #[prost(message, optional, tag="8")]
    pub resource: ::core::option::Option<::pbjson_types::Any>,
    /// Additional information about the progress of an operation, e.g., a progress percentage.
    /// MAY be absent while the operation is running, MUST be absent after the operation has completed.
    ///
    /// Format of message inside \[progress_data\] is service-dependent and MUST be documented by the
    /// service, IF it is used.
    #[prost(message, optional, tag="9")]
    pub progress_data: ::core::option::Option<::pbjson_types::Any>,
    /// The status of this operation. Set when this operation is completed.
    /// See <https://github.com/grpc/grpc/blob/master/src/proto/grpc/status/status.proto.>
    ///
    /// \[status.code\] is <https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto:>
    /// - If \[status.code\] == OK, the operation has completed successfully.
    /// - If \[status.code\] != OK, the operation has failed or has been cancelled.
    ///    - \[status.message\] will contain a user-readable and actionable error message.
    ///    - \[status.details\] will contain additional diagnostic information in the form of
    ///      \[ServiceError\] from ../error/v1alpha1/error.proto
    /// - \[status.code\] must belong to an Operation-compatible subset of GRPC codes:
    ///    OK, CANCELLED, PERMISSION_DENIED, RESOURCE_EXHAUSTED, FAILED_PRECONDITION, ABORTED, INTERNAL
    #[prost(message, optional, tag="10")]
    pub status: ::core::option::Option<super::super::super::google::rpc::Status>,
}
/// Nested message and enum types in `Operation`.
pub mod operation {
    /// Request header is a container for all the values of a particular header of a request
    /// as there is no such thing as map<string, repeated string>
    #[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
    pub struct RequestHeader {
        /// The values of a particular header from a request
        #[prost(string, repeated, tag="1")]
        pub values: ::prost::alloc::vec::Vec<::prost::alloc::string::String>,
    }
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct GetOperationRequest {
    /// Operation ID.
    #[prost(string, tag="1")]
    pub id: ::prost::alloc::string::String,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ListOperationsRequest {
    /// ID of the Resource to list operations for.
    #[prost(string, tag="1")]
    pub resource_id: ::prost::alloc::string::String,
    /// Page size. \[1...1000\]. Optional, if not specified, a reasonable default will be chosen by the service.
    #[prost(int64, tag="2")]
    pub page_size: i64,
    /// Listing continuation token. Empty to start listing from the first page.
    #[prost(string, tag="3")]
    pub page_token: ::prost::alloc::string::String,
    /// Filter expression for the listing results. Optional.
    /// Filter expression format: TBD.
    #[prost(string, tag="4")]
    pub filter: ::prost::alloc::string::String,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ListOperationsResponse {
    /// List of operations on this result page.
    #[prost(message, repeated, tag="1")]
    pub operations: ::prost::alloc::vec::Vec<Operation>,
    /// Listing continuation token for the next page of results.
    #[prost(string, tag="2")]
    pub next_page_token: ::prost::alloc::string::String,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ListOperationsByParentRequest {
    /// ID of the parent to list operations for resource type at.
    #[prost(string, tag="1")]
    pub parent_id: ::prost::alloc::string::String,
    /// Page size. \[1...1000\]. Optional, if not specified, a reasonable default will be chosen by the service.
    #[prost(int64, tag="2")]
    pub page_size: i64,
    /// Listing continuation token. Empty to start listing from the first page.
    #[prost(string, tag="3")]
    pub page_token: ::prost::alloc::string::String,
    /// Filter expression for the listing results. Optional.
    /// Filter expression format: TBD.
    #[prost(string, tag="4")]
    pub filter: ::prost::alloc::string::String,
}
include!("nebius.common.v1alpha1.serde.rs");
include!("nebius.common.v1alpha1.tonic.rs");
// @@protoc_insertion_point(module)